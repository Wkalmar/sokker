# The following types define the data model of the example service
# based on which the GraphQL API is generated

type User @model {
    # Required system field:
    id: ID! @isUnique # read-only (managed by Graphcool)

    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    players: [Player!]! @relation(name: "UserOfPlayers")
    filters: [Filter!]!  @relation(name: "UserOfFilters")

    email: String! @isUnique
    password: String!
    name: String
    trigger: String # for triggering socket update
}


type Net @model {
    # Required system field:
    id: ID! @isUnique # read-only (managed by Graphcool)

    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)
}


type Player @model {
    # Required system field:
    id: ID! @isUnique # read-only (managed by Graphcool)

    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    user: User! @relation(name: "UserOfPlayers")

    playerId: String!
    name: String!

    age: Float!
    defender: Float!
    keeper: Float!
    pace: Float!
    passing: Float!
    playmaker: Float!
    stamina: Float!
    striker: Float!
    technique: Float!

    att: Float!,
    def: Float!,
    gk: Float!,
    mid: Float!
}


type Filter @model {
    id: ID! @isUnique # read-only (managed by Graphcool)

    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    user: User! @relation(name: "UserOfFilters")

    name: String!,
    filter: String!
}


type Cache @model {
    id: ID! @isUnique # read-only (managed by Graphcool)
    transfers: String,

    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)
}
